package modele;
import java.util.*;

public class GraphePondere {
	
	/**
	 * Default Constructor
	 */
	 public GraphePondere(){
	 }
	 
	 /**
	  * 
	  * @param n
	  */
	 public GraphePondere(Plan plan) {
		 
	 } 
	 
	 /**
	  * 
	  */
	 protected int [][]  couts;
	 
	 /**
	  * 
	  * @param source
	  * @param dest
	  * @param cout
	  */
    public void addEdge(int source, int dest, int cout){ 
    	couts[source][dest] = cout; 
    }
    
    /**
     * 
     * @param source
     * @param dest
     * @return
     */
	public boolean isEdge(int source, int dest){ 
		return couts[source][dest]>0; 
	}
    
	/**
	 * 
	 * @param source
	 * @param dest
	 */
	public void removeEdge(int source, int dest){
		couts[source][dest] = 0; 
	}
	
    /**
     * 
     * @param source
     * @param dest
     * @return
     */
	public int getWeight (int source, int dest)  
	{ 
		return couts[source][dest]; 
	}
	
	public int [] neighbors (int vertex) {
		 int count = 0;
		 for (int i=0; i<edges[vertex].length; i++) {
			 if (edges[vertex][i]>0) count++;
		 }
		 
		 final int[]answer= new int[count];
		 count = 0;
		 for (int i=0; i<edges[vertex].length; i++) {
			 if (edges[vertex][i]>0) answer[count++]=i;
		 }
		 
		 return answer;
	}

}
